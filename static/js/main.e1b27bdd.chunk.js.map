{"version":3,"sources":["App.jsx","index.js"],"names":["goodsFromServer","App","state","goods","goodsListVisible","sortBy","doReset","doReverse","changeListVisibility","setState","prevState","sortByAlphabet","sortByLength","reset","reverse","this","visibleGoods","sort","good1","good2","length","localeCompare","className","type","onClick","map","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,kBAAkB,EAClBC,OAAQ,GACRC,SAAS,EACTC,WAAW,GANf,EASEC,qBAAuB,WACrB,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,IAErBN,kBAAkB,QAZxB,EAgBEO,eAAiB,WACf,EAAKF,SAAS,CACZJ,OAAQ,WACRC,SAAS,EACTC,WAAW,KApBjB,EAwBEK,aAAe,WACb,EAAKH,SAAS,CACZJ,OAAQ,SACRC,SAAS,EACTC,WAAW,KA5BjB,EAgCEM,MAAQ,WACN,EAAKJ,SAAS,CACZH,SAAS,EACTC,WAAW,EACXF,OAAQ,MApCd,EAwCES,QAAU,WACR,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BH,WAAYG,EAAUH,eA1C5B,4CA8CE,WACE,MAAyDQ,KAAKb,MAAtDE,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,OAAQE,EAAlC,EAAkCA,UAAWD,EAA7C,EAA6CA,QAEzCU,EAAY,UAAOhB,GAyBvB,MAvBe,KAAXK,GACFW,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,IAAK,SACH,OAAOa,EAAME,OAASD,EAAMC,OAE9B,IAAK,WACH,OAAOF,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXb,IACFU,EAAehB,GAGbO,GACFS,EAAaF,UAIb,yBAAKQ,UAAU,OACb,6CAAetB,EAAgBoB,UAE7BhB,GAEA,4BACEmB,KAAK,SACLC,QAAST,KAAKP,sBAFhB,SAQDJ,GAEG,oCACE,4BACEmB,KAAK,SACLC,QAAST,KAAKD,SAFhB,WAOA,4BACES,KAAK,SACLC,QAAST,KAAKJ,gBAFhB,oBAOA,4BACEY,KAAK,SACLC,QAAST,KAAKF,OAFhB,SAOA,4BACEU,KAAK,SACLC,QAAST,KAAKH,cAFhB,kBAOA,6BACA,6BAEA,4BACGI,EAAaS,KAAI,SAAAC,GAAI,OACpB,wBAAIC,IAAKD,GAAOA,aA5HlC,GAAyBE,IAAMC,WCZ/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e1b27bdd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    goodsListVisible: false,\n    sortBy: '',\n    doReset: false,\n    doReverse: false,\n  }\n\n  changeListVisibility = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      goodsListVisible: true,\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortBy: 'alphabet',\n      doReset: false,\n      doReverse: false,\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'length',\n      doReset: false,\n      doReverse: false,\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      doReset: false,\n      doReverse: false,\n      sortBy: '',\n    });\n  }\n\n  reverse = () => {\n    this.setState(prevState => ({\n      doReverse: !prevState.doReverse,\n    }));\n  }\n\n  render() {\n    const { goodsListVisible, sortBy, doReverse, doReset } = this.state;\n\n    let visibleGoods = [...goodsFromServer];\n\n    if (sortBy !== '') {\n      visibleGoods.sort((good1, good2) => {\n        switch (sortBy) {\n          case 'length':\n            return good1.length - good2.length;\n\n          case 'alphabet':\n            return good1.localeCompare(good2);\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (doReset) {\n      visibleGoods = goodsFromServer;\n    }\n\n    if (doReverse) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>{`Goods: ${goodsFromServer.length}`}</h1>\n\n        {!goodsListVisible\n          && (\n          <button\n            type=\"button\"\n            onClick={this.changeListVisibility}\n          >\n            Start\n          </button>\n          )}\n\n        {goodsListVisible\n          && (\n            <>\n              <button\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByAlphabet}\n              >\n                Sort by alphabet\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <br />\n              <br />\n\n              <ul>\n                {visibleGoods.map(good => (\n                  <li key={good}>{good}</li>\n                ))}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}